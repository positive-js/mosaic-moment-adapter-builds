{"version":3,"file":"ptsecurity-mosaic-moment-adapter-adapter.mjs","sources":["../../../packages/mosaic-moment-adapter/adapter/locales/en-US.ts","../../../packages/mosaic-moment-adapter/adapter/locales/ru-RU.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-adapter.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-formats.ts","../../../packages/mosaic-moment-adapter/adapter/index.ts","../../../packages/mosaic-moment-adapter/adapter/ptsecurity-mosaic-moment-adapter-adapter.ts"],"sourcesContent":["import { DateAdapterConfig } from '@ptsecurity/cdk/datetime';\n\n\nexport const enUS: DateAdapterConfig = {\n    variables: {\n        SECONDS: 'ss',\n        MILLISECONDS: '.SSS',\n        MICROSECONDS: '.SSSSSS',\n        MINUTES: 'mm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'MMMM\\u00A0D',\n        SHORT_DATE: 'MMM\\u00A0D',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2013\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        short: {\n            standalone: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            formatted: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    },\n\n    dayOfWeekNames: {\n        long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    },\n\n    firstDayOfWeek: 0\n};\n","import { DateAdapterConfig } from '@ptsecurity/cdk/datetime';\n\n\nexport const ruRU: DateAdapterConfig = {\n    variables: {\n        SECONDS: 'ss',\n        MILLISECONDS: ',SSS',\n        MICROSECONDS: ',SSSSSS',\n        MINUTES: 'mm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'D\\u00A0MMMM',\n        SHORT_DATE: 'D\\u00A0MMM',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2014\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',\n            'Октябрь', 'Ноябрь', 'Декабрь'\n        ],\n        short: {\n            standalone: ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n            formatted: ['янв', 'фев', 'мар', 'апр', 'мая', 'июня', 'июля', 'авг', 'сен', 'окт', 'ноя', 'дек']\n        },\n        narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д']\n    },\n\n    dayOfWeekNames: {\n        long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        short: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n        narrow: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С']\n    },\n\n    firstDayOfWeek: 1\n};\n","// tslint:disable:no-magic-numbers\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n    DateAdapter,\n    MC_DATE_LOCALE\n} from '@ptsecurity/cdk/datetime';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable:no-duplicate-imports\n// @ts-ignore (look at tsconfig)\nimport { default as _rollupMoment, Moment, unitOfTime } from 'moment';\n\nimport { enUS } from './locales/en-US';\nimport { ruRU } from './locales/ru-RU';\n\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface IMcMomentDateAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * {@default false}\n     */\n    useUtc: boolean;\n    /**\n     * whether should parse method try guess date format\n     * {@default false}\n     */\n    findDateFormat: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MC_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<IMcMomentDateAdapterOptions>(\n    'MC_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable:naming-convention\nexport function MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): IMcMomentDateAdapterOptions {\n    return {\n        useUtc: false,\n        findDateFormat: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n\n    return valuesArray;\n}\n\n\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n    private localeData: {\n        firstDayOfWeek: number;\n        longMonths: string[];\n        shortMonths: string[];\n        dates: string[];\n        longDaysOfWeek: string[];\n        shortDaysOfWeek: string[];\n        narrowDaysOfWeek: string[];\n    };\n\n    constructor(\n        @Optional() @Inject(MC_DATE_LOCALE) dateLocale: string,\n        @Optional() @Inject(MC_MOMENT_DATE_ADAPTER_OPTIONS) private readonly options?: IMcMomentDateAdapterOptions\n    ) {\n        super();\n\n        this.setLocale(dateLocale || moment.locale());\n    }\n\n    setLocale(locale: string): void {\n        super.setLocale(locale);\n\n        this.config = locale === 'en' ? enUS : ruRU;\n\n        let momentLocaleData = moment.localeData(locale);\n\n        // This is our customs translations\n        const i18nLocals = ['en', 'ru'];\n\n        if (i18nLocals.indexOf(locale) !== -1) {\n            momentLocaleData = moment.updateLocale(locale, {\n                monthsShort: {\n                    format: this.config.monthNames.short.formatted,\n                    standalone: this.config.monthNames.short.standalone\n                },\n                weekdays: this.config.dayOfWeekNames.long,\n                weekdaysShort: this.config.dayOfWeekNames.short,\n                weekdaysMin: this.config.dayOfWeekNames.narrow\n            });\n        }\n\n        this.localeData = {\n            firstDayOfWeek: this.config.firstDayOfWeek,\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n        };\n    }\n\n    getLocaleData() {\n        return this.localeData;\n    }\n\n    setLocaleData(localeData): void {\n        this.localeData = localeData;\n    }\n\n    updateLocaleData(localeData): void {\n        this.localeData = { ...this.localeData, ...localeData };\n    }\n\n    getYear(date: Moment): number { return this.clone(date).year(); }\n\n    getMonth(date: Moment): number { return this.clone(date).month(); }\n\n    getDate(date: Moment): number { return this.clone(date).date(); }\n\n    getHours(date: Moment): number { return this.clone(date).hours(); }\n\n    getMinutes(date: Moment): number { return this.clone(date).minutes(); }\n\n    getSeconds(date: Moment): number { return this.clone(date).seconds(); }\n\n    getMilliseconds(date: Moment): number { return this.clone(date).milliseconds(); }\n\n    getTime(date: Moment): number { return date.valueOf(); }\n\n    getDayOfWeek(date: Moment): number { return this.clone(date).day(); }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        // Moment.js doesn't support narrow month names\n        return style === 'long' ? this.localeData.longMonths : this.localeData.shortMonths;\n    }\n\n    getDateNames(): string[] {\n        return this.localeData.dates;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (style === 'long') { return this.localeData.longDaysOfWeek; }\n\n        if (style === 'short') { return this.localeData.shortDaysOfWeek; }\n\n        return this.localeData.narrowDaysOfWeek;\n    }\n\n    getYearName(date: Moment): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek;\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone().locale(this.locale);\n    }\n\n    createDate(year: number, month: number = 0, date: number = 1): Moment {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this.createMoment({year, month, date}).locale(this.locale);\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    createDateTime(\n        year: number,\n        month: number,\n        date: number,\n        hours: number,\n        minutes: number,\n        seconds: number,\n        milliseconds: number\n    ): Moment {\n        const newDate = this.createDate(year, month, date);\n\n        newDate.hours(hours);\n        newDate.minutes(minutes);\n        newDate.seconds(seconds);\n        newDate.milliseconds(milliseconds);\n\n        return newDate;\n    }\n\n    today(): Moment {\n        return this.createMoment().locale(this.locale);\n    }\n\n    parse(value: any, parseFormat: string | string[]): Moment | null {\n        if (value) {\n            if (typeof value === 'string') {\n                if (this.options && this.options.findDateFormat) {\n                    return this.findFormat(value);\n                }\n\n                return parseFormat\n                    ? this.createMoment(value, parseFormat, this.locale)\n                    : this.createMoment(value).locale(this.locale);\n            }\n\n            return this.createMoment(value).locale(this.locale);\n        }\n\n        return null;\n    }\n\n    format(date: Moment, displayFormat: string): string {\n        // tslint:disable:no-parameter-reassignment\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n\n        return date.format(displayFormat);\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return this.clone(date).add({ years });\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return this.clone(date).add({ months });\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return this.clone(date).add({ days });\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    /** https://www.ietf.org/rfc/rfc3339.txt */\n    deserialize(value: any): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value).locale(this.locale);\n        } else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n\n        if (date && this.isValid(date)) {\n            return this.createMoment(date).locale(this.locale);\n        }\n\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any): boolean {\n        return moment.isMoment(obj);\n    }\n\n    isValid(date: Moment): boolean {\n        return this.clone(date).isValid();\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n\n    hasSame(startDate: Moment, endDate: Moment, unit: unitOfTime.Diff): boolean {\n        return startDate.isSame(endDate, unit);\n    }\n\n    diffNow(date: Moment, unit: unitOfTime.Diff): number {\n        return date.diff(this.today(), unit);\n    }\n\n    daysFromToday(date: Moment): number {\n        return this.diffNow(date, 'days');\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return this.options?.useUtc ? moment.utc(...args) : moment(...args);\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n    private findFormat(value: string): Moment | null {\n        if (!value) { return null; }\n\n        // default test - iso\n        const isoDate =  this.createMoment(value, moment.ISO_8601, this.locale);\n\n        if (isoDate.isValid()) { return isoDate; }\n\n        if (this.isNumeric(value)) {\n            // unix time sec\n            return this.createMoment(value, 'X', this.locale);\n        }\n\n        // long months naming: D MMM YYYY, MMM Do YYYY with short case support\n        if (\n            /^\\d{1,2}\\s\\S+\\s(\\d{2}|\\d{4})$/.test(value.trim()) ||\n            /^\\S+\\s\\d{1,2}[a-z]{2}\\s(\\d{2}|\\d{4})$/.test(value.trim())\n        ) {\n            return this.parseWithSpace(value);\n        }\n\n        // slash notation: DD/MM/YYYY, MM/DD/YYYY with short case support\n        if (/^\\d{1,2}\\/\\d{1,2}\\/(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithSlash(value);\n        }\n\n        // dash notation: DD-MM-YYYY, YYYY-DD-MM with short case support\n        if (/(^(\\d{1,2}|\\d{4})-\\d{1,2}-\\d{1,2}$)|(^\\d{1,2}-\\d{1,2}-(\\d{2}|\\d{4})$)/.test(value)) {\n           return this.parseWithDash(value);\n        }\n\n        // dot notation: DD.MM.YYYY with short case support\n        if (/^\\d{1,2}\\.\\d{1,2}\\.(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithDot(value);\n        }\n\n        return null;\n    }\n\n    private parseWithSpace(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD MMMM YYYY', this.locale);\n            case 'en':\n                // 16 Feb 2019 vs Feb 16th 2019, covers Feb and February cases\n                if (this.isNumeric(value[0])) {\n                    return this.createMoment(value, 'D MMMM YYYY', this.locale);\n                }\n\n                return this.createMoment(value, 'MMMM Do YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithSlash(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            // todo do we use generalized locales? en vs en-US; until not we try to guess\n            case 'en':\n                // US vs UK\n                const parts = value.split('/');\n                const datePartsCount = 3;\n                if (parts.length !== datePartsCount) { return null; }\n\n                const firstPart = parts[0].trim();\n                const secondPart = parts[1].trim();\n\n                if (!this.isNumeric(firstPart) || !this.isNumeric(secondPart)) { return null; }\n\n                const monthsInYears = 12;\n\n                const canFirstBeMonth = +firstPart <= monthsInYears;\n                const canSecondByMonth = +secondPart <= monthsInYears;\n\n                // first two parts cannot be month\n                if (!canFirstBeMonth && !canSecondByMonth) { return null; }\n\n                const canDetermineWhereMonth = canFirstBeMonth && canSecondByMonth;\n\n                // use US format by default\n                if (canDetermineWhereMonth) { return this.createMoment(value, 'MM/DD/YYYY', this.locale); }\n\n                return canFirstBeMonth && !canSecondByMonth\n                    ? this.createMoment(value, 'MM/DD/YYYY', this.locale)\n                    : this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithDash(value: string): Moment | null {\n        // leading year vs finishing year\n        const parts = value.split('-');\n        if (parts[0].length === 0) { return null; }\n\n        const maxDayOrMonthCharsCount = 2;\n\n        return parts[0].length <= maxDayOrMonthCharsCount\n            ? this.createMoment(value, 'DD-MM-YYYY', this.locale)\n            : this.createMoment(value, 'YYYY-MM-DD', this.locale);\n    }\n\n    private parseWithDot(value: string): Moment | null {\n        // covers two cases YYYY and YY (for current year)\n        return this.createMoment(value, 'DD.MM.YYYY', this.locale);\n    }\n}\n","import { McDateFormats } from '@ptsecurity/cdk/datetime';\n\n\nexport const MC_MOMENT_DATE_FORMATS: McDateFormats = {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n};\n","import { NgModule } from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, MC_DATE_LOCALE } from '@ptsecurity/cdk/datetime';\n\nimport { MC_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from './moment-date-adapter';\nimport { MC_MOMENT_DATE_FORMATS } from './moment-date-formats';\n\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n    providers: [{\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MC_DATE_LOCALE, MC_MOMENT_DATE_ADAPTER_OPTIONS]\n    }]\n})\nexport class MomentDateModule {}\n\n@NgModule({\n    imports: [MomentDateModule],\n    providers: [{\n        provide: MC_DATE_FORMATS, useValue: MC_MOMENT_DATE_FORMATS\n    }]\n})\nexport class McMomentDateModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_rollupMoment","_moment"],"mappings":"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"}