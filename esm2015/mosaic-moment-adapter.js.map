{"version":3,"file":"mosaic-moment-adapter.js","sources":["../../packages/mosaic-moment-adapter/adapter/index.ts","../../packages/mosaic-moment-adapter/adapter/moment-date-formats.ts","../../packages/mosaic-moment-adapter/adapter/moment-date-adapter.ts","../../packages/mosaic-moment-adapter/adapter/locales/ru-RU.ts","../../packages/mosaic-moment-adapter/adapter/locales/en-US.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, MC_DATE_LOCALE } from '@ptsecurity/cdk/datetime';\n\nimport { MC_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from './moment-date-adapter';\nimport { MC_MOMENT_DATE_FORMATS } from './moment-date-formats';\n\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [ MC_DATE_LOCALE, MC_MOMENT_DATE_ADAPTER_OPTIONS ]\n        }\n    ]\n})\nexport class MomentDateModule {}\n\n@NgModule({\n    imports: [MomentDateModule],\n    providers: [{\n        provide: MC_DATE_FORMATS, useValue: MC_MOMENT_DATE_FORMATS\n    }]\n})\nexport class McMomentDateModule {}\n","import { McDateFormats } from '@ptsecurity/cdk/datetime';\n\n\nexport const MC_MOMENT_DATE_FORMATS: McDateFormats = {\n    parse: {\n        dateInput: 'L'\n    },\n    display: {\n        dateInput: 'L',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY'\n    }\n};\n","// tslint:disable:no-magic-numbers\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n    DateAdapter,\n    MC_DATE_LOCALE,\n    IFormatterRangeTemplate,\n    IFormatterRelativeTemplate,\n    IFormatterAbsoluteTemplate\n} from '@ptsecurity/cdk/datetime';\nimport * as MessageFormat from 'messageformat';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable:no-duplicate-imports\n// @ts-ignore (look at tsconfig)\nimport { default as _rollupMoment, Moment } from 'moment';\nimport { unitOfTime } from 'moment';\n\nimport { enUS } from './locales/en-US';\nimport { ruRU } from './locales/ru-RU';\nimport { IFormatterConfig } from './locales/IFormatterConfig';\n\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface IMcMomentDateAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * {@default false}\n     */\n    useUtc: boolean;\n    /**\n     * whether should parse method try guess date format\n     * {@default false}\n     */\n    findDateFormat: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MC_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<IMcMomentDateAdapterOptions>(\n    'MC_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable:naming-convention\nexport function MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): IMcMomentDateAdapterOptions {\n    return {\n        useUtc: false,\n        findDateFormat: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n\n    return valuesArray;\n}\n\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private messageformat: MessageFormat;\n\n    private readonly invalidDateErrorText: string = 'Invalid date';\n\n    private formatterConfig: IFormatterConfig;\n\n    private get momentWithLocale(): Moment {\n        return moment().locale(this.locale);\n    }\n\n    private localeData: {\n        firstDayOfWeek: number;\n        longMonths: string[];\n        shortMonths: string[];\n        dates: string[];\n        longDaysOfWeek: string[];\n        shortDaysOfWeek: string[];\n        narrowDaysOfWeek: string[];\n    };\n\n    constructor(\n        @Optional() @Inject(MC_DATE_LOCALE) dateLocale: string,\n        @Optional() @Inject(MC_MOMENT_DATE_ADAPTER_OPTIONS)\n        private options?: IMcMomentDateAdapterOptions\n    ) {\n        super();\n\n        this.setLocale(dateLocale || moment.locale());\n\n        this.configureTranslator(this.locale);\n    }\n\n    setLocale(locale: string): void {\n        super.setLocale(locale);\n\n        let momentLocaleData = moment.localeData(locale);\n\n        // This is our customs translations\n        const i18nLocals = ['en', 'ru'];\n\n        if (i18nLocals.indexOf(locale) !== -1) {\n            this.formatterConfig = locale === 'en' ? enUS : ruRU;\n\n            momentLocaleData = moment.updateLocale(locale, {\n                monthsShort: {\n                    format: this.formatterConfig.monthNames.short.formatted,\n                    standalone: this.formatterConfig.monthNames.short.standalone\n                },\n                weekdaysShort: this.formatterConfig.dayOfWeekNames.short,\n                weekdays: this.formatterConfig.dayOfWeekNames.long\n            });\n        }\n\n        this.localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n        };\n    }\n\n    getYear(date: Moment): number {\n        return this.clone(date).year();\n    }\n\n    getMonth(date: Moment): number {\n        return this.clone(date).month();\n    }\n\n    getDate(date: Moment): number {\n        return this.clone(date).date();\n    }\n\n    getHours(date: Moment): number {\n        return this.clone(date).hours();\n    }\n\n    getMinutes(date: Moment): number {\n        return this.clone(date).minutes();\n    }\n\n    getSeconds(date: Moment): number {\n        return this.clone(date).seconds();\n    }\n\n    getMilliseconds(date: Moment): number {\n        return this.clone(date).milliseconds();\n    }\n\n    getTime(date: Moment): number {\n        return date.valueOf();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return this.clone(date).day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        // Moment.js doesn't support narrow month names\n        return style === 'long' ? this.localeData.longMonths : this.localeData.shortMonths;\n    }\n\n    getDateNames(): string[] {\n        return this.localeData.dates;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (style === 'long') {\n            return this.localeData.longDaysOfWeek;\n        }\n\n        if (style === 'short') {\n            return this.localeData.shortDaysOfWeek;\n        }\n\n        return this.localeData.narrowDaysOfWeek;\n    }\n\n    getYearName(date: Moment): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek;\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone().locale(this.locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this.createMoment({year, month, date}).locale(this.locale);\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    createDateTime(\n        year: number, month: number, date: number, hours: number, minutes: number, seconds: number, milliseconds: number\n    ): Moment {\n        const newDate = this.createDate(year, month, date);\n\n        newDate.hours(hours);\n        newDate.minutes(minutes);\n        newDate.seconds(seconds);\n        newDate.milliseconds(milliseconds);\n\n        return newDate;\n    }\n\n    today(): Moment {\n        return this.createMoment().locale(this.locale);\n    }\n\n    parse(value: any, parseFormat: string | string[]): Moment | null {\n        if (value) {\n            if (value && typeof value === 'string') {\n                if (this.options && this.options.findDateFormat) {\n                    return this.findFormat(value);\n                }\n\n                return parseFormat\n                    ? this.createMoment(value, parseFormat, this.locale)\n                    : this.createMoment(value).locale(this.locale);\n            }\n\n            return this.createMoment(value).locale(this.locale);\n        }\n\n        return null;\n    }\n\n    format(date: Moment, displayFormat: string): string {\n        // tslint:disable:no-parameter-reassignment\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n\n        return date.format(displayFormat);\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return this.clone(date).add({ years });\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return this.clone(date).add({ months });\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return this.clone(date).add({ days });\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    /** https://www.ietf.org/rfc/rfc3339.txt */\n    deserialize(value: any): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value).locale(this.locale);\n        } else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this.createMoment(date).locale(this.locale);\n        }\n\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any): boolean {\n        return moment.isMoment(obj);\n    }\n\n    isValid(date: Moment): boolean {\n        return this.clone(date).isValid();\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n\n    relativeDate(date: Moment, template: IFormatterRelativeTemplate): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const now = this.momentWithLocale;\n\n        const totalSeconds = now.diff(date, 'seconds');\n        const totalMinutes = now.diff(date, 'minutes');\n\n        const isToday = now.isSame(date, 'day');\n        const isYesterday = now.add(-1, 'days').isSame(date, 'day');\n\n        const templateVariables = {...this.formatterConfig.variables, ...template.variables};\n        const variables = this.compileVariables(date, templateVariables);\n        let newTemplate;\n\n        if (totalSeconds <= 59) { // seconds ago\n            variables.SECONDS_PASSED = totalSeconds;\n            newTemplate = template.SECONDS_AGO;\n\n        } else if (totalMinutes <= 59) { // minutes ago\n            variables.MINUTES_PASSED = totalMinutes;\n            newTemplate = template.MINUTES_AGO;\n\n        } else if (isToday) { // today\n            newTemplate = template.TODAY;\n\n        } else if (isYesterday) { // yesterday\n            newTemplate = template.YESTERDAY;\n\n        } else { // before yesterday\n            newTemplate = template.BEFORE_YESTERDAY;\n        }\n\n        return this.messageformat.compile(newTemplate)(variables);\n    }\n\n    relativeShortDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.short);\n    }\n\n    relativeLongDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.long);\n    }\n\n    absoluteDate(date: Moment, params: IFormatterAbsoluteTemplate, datetime = false): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const variables = {...this.formatterConfig.variables, ...params.variables};\n        const template = datetime ? params.DATETIME : params.DATE;\n\n        return this.messageformat.compile(template)(this.compileVariables(date, variables));\n    }\n\n    absoluteShortDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short);\n    }\n\n    absoluteShortDateTime(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short, true);\n    }\n\n    absoluteLongDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long);\n    }\n\n    absoluteLongDateTime(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long, true);\n    }\n\n    openedRangeDate(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    openedRangeDateTime(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        console.log('openedRangeDateTime: '); // tslint:disable-line:no-console\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeDate(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        const sameMonth = this.isSame('month', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n\n        const bothCurrentYear =\n            startDateVariables.CURRENT_YEAR === 'yes' &&\n            endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {\n            ...variables,\n            START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n            END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n            SAME_MONTH: sameMonth\n        };\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    rangeDateTime(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = {...this.formatterConfig.variables, ...template.variables};\n        const sameMonth = this.isSame('month', startDate, endDate);\n        const sameDay = this.isSame('day', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n        startDateVariables.SAME_DAY = sameDay;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n        endDateVariables.SAME_DAY = sameDay;\n\n        const bothCurrentYear =\n            startDateVariables.CURRENT_YEAR === 'yes' &&\n            endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {...variables,\n            START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n            END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n            SAME_MONTH: sameMonth,\n            SAME_DAY: sameDay};\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeShortDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeShortDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeLongDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeLongDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeMiddleDateTime(startDate: Moment, endDate: Moment): string {\n        return this.rangeDateTime(startDate, endDate, this.formatterConfig.rangeTemplates.closedRange.middle);\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\n    }\n\n    private compileVariables(date: Moment, variables: any): any {\n        const compiledVariables: any = {};\n\n        // tslint:disable-next-line:no-for-in\n        for (const key in variables) {\n            if (!variables.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = variables[key];\n            compiledVariables[key] = date.format(value);\n        }\n\n        compiledVariables.CURRENT_YEAR = this.isCurrentYear(date);\n\n        return compiledVariables;\n    }\n\n    private isCurrentYear(value: Moment): 'yes' | 'no' {\n        return this.momentWithLocale.isSame(value, 'year') ? 'yes' : 'no';\n    }\n\n    private isSame(unit: unitOfTime.StartOf, startDate: Moment, endDate: Moment): string {\n        return startDate.isSame(endDate, unit) ? 'yes' : 'no';\n    }\n\n    private configureTranslator(locale: string): void {\n        this.messageformat = new MessageFormat(locale);\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n    private findFormat(value: string): Moment | null {\n        if (!value) {\n            return null;\n        }\n\n        // default test - iso\n        const isoDate =  this.createMoment(value, moment.ISO_8601, this.locale);\n\n        if (isoDate.isValid()) {\n            return isoDate;\n        }\n\n        if (this.isNumeric(value)) {\n            // unix time sec\n            return this.createMoment(value, 'X', this.locale);\n        }\n\n        // long months naming: D MMM YYYY, MMM Do YYYY with short case support\n        if (\n            /^\\d{1,2}\\s\\S+\\s(\\d{2}|\\d{4})$/.test(value.trim()) ||\n            /^\\S+\\s\\d{1,2}[a-z]{2}\\s(\\d{2}|\\d{4})$/.test(value.trim())\n        ) {\n            return this.parseWithSpace(value);\n        }\n\n        // slash notation: DD/MM/YYYY, MM/DD/YYYY with short case support\n        if (/^\\d{1,2}\\/\\d{1,2}\\/(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithSlash(value);\n        }\n\n        // dash notation: DD-MM-YYYY, YYYY-DD-MM with short case support\n        if (/(^(\\d{1,2}|\\d{4})-\\d{1,2}-\\d{1,2}$)|(^\\d{1,2}-\\d{1,2}-(\\d{2}|\\d{4})$)/.test(value)) {\n           return this.parseWithDash(value);\n        }\n\n        // dot notation: DD.MM.YYYY with short case support\n        if (/^\\d{1,2}\\.\\d{1,2}\\.(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithDot(value);\n        }\n\n        return null;\n    }\n\n    private parseWithSpace(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD MMMM YYYY', this.locale);\n            case 'en':\n                // 16 Feb 2019 vs Feb 16th 2019, covers Feb and February cases\n                if (this.isNumeric(value[0])) {\n                    return this.createMoment(value, 'D MMMM YYYY', this.locale);\n                }\n\n                return this.createMoment(value, 'MMMM Do YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithSlash(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            // todo do we use generalized locales? en vs en-US; until not we try to guess\n            case 'en':\n                // US vs UK\n                const parts = value.split('/');\n                const datePartsCount = 3;\n                if (parts.length !== datePartsCount) {\n                    return null;\n                }\n\n                const firstPart = parts[0].trim();\n                const secondPart = parts[1].trim();\n\n                if (!this.isNumeric(firstPart) || !this.isNumeric(secondPart)) {\n                    return null;\n                }\n\n                const monthsInYears = 12;\n\n                const canFirstBeMonth = +firstPart <= monthsInYears;\n                const canSecondByMonth = +secondPart <= monthsInYears;\n\n                // first two parts cannot be month\n                if (!canFirstBeMonth && !canSecondByMonth) {\n                    return null;\n                }\n\n                const canDetermineWhereMonth = canFirstBeMonth && canSecondByMonth;\n\n                if (canDetermineWhereMonth) {\n                    // use US format by default\n                    return this.createMoment(value, 'MM/DD/YYYY', this.locale);\n                }\n\n                return canFirstBeMonth && !canSecondByMonth\n                    ? this.createMoment(value, 'MM/DD/YYYY', this.locale)\n                    : this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithDash(value: string): Moment | null {\n        // leading year vs finishing year\n        const parts = value.split('-');\n        if (parts[0].length === 0) {\n            return null;\n        }\n\n        const maxDayOrMonthCharsCount = 2;\n\n        return parts[0].length <= maxDayOrMonthCharsCount\n            ? this.createMoment(value, 'DD-MM-YYYY', this.locale)\n            : this.createMoment(value, 'YYYY-MM-DD', this.locale);\n    }\n\n    private parseWithDot(value: string): Moment | null {\n        // covers two cases YYYY and YY (for current year)\n        return this.createMoment(value, 'DD.MM.YYYY', this.locale);\n    }\n}\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const ruRU: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'D\\u00A0MMMM',\n        SHORT_DATE: 'D\\u00A0MMM',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2014\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',\n            'Октябрь', 'Ноябрь', 'Декабрь'\n        ],\n        short: {\n            standalone: ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n            formatted: ['янв', 'фев', 'мар', 'апр', 'мая', 'июня', 'июля', 'авг', 'сен', 'окт', 'ноя', 'дек']\n        },\n        narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д']\n    },\n\n    dayOfWeekNames: {\n        long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        short: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n        narrow: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}мин назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}минуту} =2{#{NBSP}минуты} other{#{NBSP}минут}} назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE} {YEAR}, {TIME}}}'\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE} {YEAR}, {TIME}}}'\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, с{NBSP}{TIME}}\n                                other{{DATE} {YEAR}, с{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{по{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{С{NBSP}{START_DATETIME} по{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const enUS: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'MMMM\\u00A0D',\n        SHORT_DATE: 'MMM\\u00A0D',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2013\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        short: {\n            standalone: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            formatted: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    },\n\n    dayOfWeekNames: {\n        long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}min ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}minute} other{#{NBSP}minutes}} ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}, {TIME}}}'\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}, {TIME}}}'\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, from{NBSP}{TIME}}\n                                other{{DATE}, {YEAR}, from{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{to{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{From {START_DATETIME} to{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n"],"names":["_rollupMoment","_moment"],"mappings":"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"}