{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/mosaic-moment-adapter/adapter/locales/en-US.ts","../../../packages/mosaic-moment-adapter/adapter/locales/ru-RU.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-adapter.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-formats.ts","../../../packages/mosaic-moment-adapter/adapter/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","enUS","variables","SECONDS","MILLISECONDS","MICROSECONDS","MINUTES","TIME","DAY","MONTH","YEAR","DATE","SHORT_DATE","DASH","LONG_DASH","NBSP","monthNames","long","short","standalone","formatted","narrow","dayOfWeekNames","relativeTemplates","SECONDS_AGO","MINUTES_AGO","TODAY","YESTERDAY","BEFORE_YESTERDAY","absoluteTemplates","DATETIME","rangeTemplates","closedRange","START_DATE","END_DATE","START_DATETIME","END_DATETIME","middle","openedRange","ruRU","moment","_rollupMoment","_moment","MC_MOMENT_DATE_ADAPTER_OPTIONS","InjectionToken","providedIn","factory","MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY","useUtc","findDateFormat","range","valueFunction","valuesArray","MomentDateAdapter","dateLocale","options","_this","_super","this","invalidDateErrorText","setLocale","locale","configureTranslator","TypeError","String","__","constructor","__extends","defineProperty","momentLocaleData","localeData","indexOf","formatterConfig","updateLocale","monthsShort","format","weekdaysShort","weekdays","firstDayOfWeek","longMonths","months","shortMonths","dates","createDate","longDaysOfWeek","shortDaysOfWeek","narrowDaysOfWeek","weekdaysMin","getLocaleData","setLocaleData","updateLocaleData","assign","getYear","date","clone","year","getMonth","month","getDate","getHours","hours","getMinutes","minutes","getSeconds","seconds","getMilliseconds","milliseconds","getTime","valueOf","getDayOfWeek","day","getMonthNames","style","getDateNames","getDayOfWeekNames","getYearName","getFirstDayOfWeek","getNumDaysInMonth","daysInMonth","Error","result","createMoment","isValid","createDateTime","newDate","today","parse","parseFormat","findFormat","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","toIso8601","deserialize","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","relativeDate","template","newTemplate","now","momentWithLocale","totalSeconds","diff","totalMinutes","isToday","isSame","isYesterday","templateVariables","compileVariables","SECONDS_PASSED","MINUTES_PASSED","messageformat","compile","relativeShortDate","relativeLongDate","absoluteDate","params","datetime","microseconds","SHOW_MILLISECONDS","SHOW_MICROSECONDS","absoluteShortDate","absoluteShortDateTime","absoluteLongDate","absoluteLongDateTime","openedRangeDate","startDate","endDate","startDateVariables","RANGE_TYPE","endDateVariables","openedRangeDateTime","rangeDate","sameMonth","SAME_MONTH","bothCurrentYear","CURRENT_YEAR","rangeDateTime","sameDay","SAME_DAY","rangeShortDate","rangeShortDateTime","rangeLongDate","rangeLongDateTime","rangeMiddleDateTime","args","_i","utc","apply","compiledVariables","key","isCurrentYear","unit","MessageFormat","isNumeric","isNaN","parseFloat","isFinite","isoDate","test","trim","parseWithSpace","parseWithSlash","parseWithDash","parseWithDot","parts","split","firstPart","secondPart","canFirstBeMonth","canSecondByMonth","DateAdapter","Injectable","Optional","type","Inject","MC_DATE_LOCALE","MC_MOMENT_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgModule","providers","provide","useClass","deps","imports","MomentDateModule","MC_DATE_FORMATS","useValue","Éµ0"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const enUS: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MILLISECONDS: '.SSS',\n        MICROSECONDS: '.SSSSSS',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'MMMM\\u00A0D',\n        SHORT_DATE: 'MMM\\u00A0D',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2013\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        short: {\n            standalone: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            formatted: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    },\n\n    dayOfWeekNames: {\n        long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}min ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}minute} other{#{NBSP}minutes}} ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{SHORT_DATE}, {TIME}}\n                    other{{SHORT_DATE}, {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                    select,\n                        yes{{MICROSECONDS}}\n                        other{}\n            }`\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{DATE}, {TIME}}\n                    other{{DATE}, {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, from{NBSP}{TIME}}\n                                other{{DATE}, {YEAR}, from{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{to{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{From {START_DATETIME} to{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const ruRU: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MILLISECONDS: ',SSS',\n        MICROSECONDS: ',SSSSSS',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'D\\u00A0MMMM',\n        SHORT_DATE: 'D\\u00A0MMM',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2014\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'Ð¯Ð½Ð²Ð°ÑÑ', 'Ð¤ÐµÐ²ÑÐ°Ð»Ñ', 'ÐÐ°ÑÑ', 'ÐÐ¿ÑÐµÐ»Ñ', 'ÐÐ°Ð¹', 'ÐÑÐ½Ñ', 'ÐÑÐ»Ñ', 'ÐÐ²Ð³ÑÑÑ', 'Ð¡ÐµÐ½ÑÑÐ±ÑÑ',\n            'ÐÐºÑÑÐ±ÑÑ', 'ÐÐ¾ÑÐ±ÑÑ', 'ÐÐµÐºÐ°Ð±ÑÑ'\n        ],\n        short: {\n            standalone: ['ÑÐ½Ð²', 'ÑÐµÐ²', 'Ð¼Ð°ÑÑ', 'Ð°Ð¿Ñ', 'Ð¼Ð°Ð¹', 'Ð¸ÑÐ½Ñ', 'Ð¸ÑÐ»Ñ', 'Ð°Ð²Ð³', 'ÑÐµÐ½', 'Ð¾ÐºÑ', 'Ð½Ð¾Ñ', 'Ð´ÐµÐº'],\n            formatted: ['ÑÐ½Ð²', 'ÑÐµÐ²', 'Ð¼Ð°Ñ', 'Ð°Ð¿Ñ', 'Ð¼Ð°Ñ', 'Ð¸ÑÐ½Ñ', 'Ð¸ÑÐ»Ñ', 'Ð°Ð²Ð³', 'ÑÐµÐ½', 'Ð¾ÐºÑ', 'Ð½Ð¾Ñ', 'Ð´ÐµÐº']\n        },\n        narrow: ['Ð¯', 'Ð¤', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð¡', 'Ð', 'Ð', 'Ð']\n    },\n\n    dayOfWeekNames: {\n        long: ['ÐÐ¾ÑÐºÑÐµÑÐµÐ½ÑÐµ', 'ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº', 'ÐÑÐ¾ÑÐ½Ð¸Ðº', 'Ð¡ÑÐµÐ´Ð°', 'Ð§ÐµÑÐ²ÐµÑÐ³', 'ÐÑÑÐ½Ð¸ÑÐ°', 'Ð¡ÑÐ±Ð±Ð¾ÑÐ°'],\n        short: ['Ð²Ñ', 'Ð¿Ð½', 'Ð²Ñ', 'ÑÑ', 'ÑÑ', 'Ð¿Ñ', 'ÑÐ±'],\n        narrow: ['Ð', 'Ð', 'Ð', 'Ð¡', 'Ð§', 'Ð', 'Ð¡']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Ð¢Ð¾Ð»ÑÐºÐ¾ ÑÑÐ¾',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}Ð¼Ð¸Ð½ Ð½Ð°Ð·Ð°Ð´',\n            TODAY: '{TIME}',\n            YESTERDAY: 'ÐÑÐµÑÐ°, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE} {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Ð¢Ð¾Ð»ÑÐºÐ¾ ÑÑÐ¾',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}Ð¼Ð¸Ð½ÑÑÑ} =2{#{NBSP}Ð¼Ð¸Ð½ÑÑÑ} other{#{NBSP}Ð¼Ð¸Ð½ÑÑ}} Ð½Ð°Ð·Ð°Ð´',\n            TODAY: '{TIME}',\n            YESTERDAY: 'ÐÑÐµÑÐ°, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE} {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{SHORT_DATE}, {TIME}}\n                    other{{SHORT_DATE} {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{DATE}, {TIME}}\n                    other{{DATE} {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, Ñ{NBSP}{TIME}}\n                                other{{DATE} {YEAR}, Ñ{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{Ð¿Ð¾{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{Ð¡{NBSP}{START_DATETIME} Ð¿Ð¾{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{Ð¡{NBSP}{START_DATE}}\n                        other{ÐÐ¾{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{Ð¡{NBSP}{START_DATETIME}}\n                        other{ÐÐ¾{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{Ð¡{NBSP}{START_DATE}}\n                        other{ÐÐ¾{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{Ð¡{NBSP}{START_DATETIME}}\n                        other{ÐÐ¾{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","// tslint:disable:no-magic-numbers\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n    DateAdapter,\n    MC_DATE_LOCALE,\n    IFormatterRangeTemplate,\n    IFormatterRelativeTemplate,\n    IFormatterAbsoluteTemplate,\n    IAbsoluteDateTimeOptions\n} from '@ptsecurity/cdk/datetime';\nimport * as MessageFormat from 'messageformat';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable:no-duplicate-imports\n// @ts-ignore (look at tsconfig)\nimport { default as _rollupMoment, Moment } from 'moment';\nimport { unitOfTime } from 'moment';\n\nimport { enUS } from './locales/en-US';\nimport { ruRU } from './locales/ru-RU';\nimport { IFormatterConfig } from './locales/IFormatterConfig';\n\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface IMcMomentDateAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * {@default false}\n     */\n    useUtc: boolean;\n    /**\n     * whether should parse method try guess date format\n     * {@default false}\n     */\n    findDateFormat: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MC_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<IMcMomentDateAdapterOptions>(\n    'MC_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable:naming-convention\nexport function MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): IMcMomentDateAdapterOptions {\n    return {\n        useUtc: false,\n        findDateFormat: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n\n    return valuesArray;\n}\n\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n    private messageformat: MessageFormat;\n\n    private readonly invalidDateErrorText: string = 'Invalid date';\n\n    private formatterConfig: IFormatterConfig;\n\n    private get momentWithLocale(): Moment {\n        return moment().locale(this.locale);\n    }\n\n    private localeData: {\n        firstDayOfWeek: number;\n        longMonths: string[];\n        shortMonths: string[];\n        dates: string[];\n        longDaysOfWeek: string[];\n        shortDaysOfWeek: string[];\n        narrowDaysOfWeek: string[];\n    };\n\n    constructor(\n        @Optional() @Inject(MC_DATE_LOCALE) dateLocale: string,\n        @Optional() @Inject(MC_MOMENT_DATE_ADAPTER_OPTIONS) private readonly options?: IMcMomentDateAdapterOptions\n    ) {\n        super();\n\n        this.setLocale(dateLocale || moment.locale());\n\n        this.configureTranslator(this.locale);\n    }\n\n    setLocale(locale: string): void {\n        super.setLocale(locale);\n\n        let momentLocaleData = moment.localeData(locale);\n\n        // This is our customs translations\n        const i18nLocals = ['en', 'ru'];\n\n        if (i18nLocals.indexOf(locale) !== -1) {\n            this.formatterConfig = locale === 'en' ? enUS : ruRU;\n\n            momentLocaleData = moment.updateLocale(locale, {\n                monthsShort: {\n                    format: this.formatterConfig.monthNames.short.formatted,\n                    standalone: this.formatterConfig.monthNames.short.standalone\n                },\n                weekdaysShort: this.formatterConfig.dayOfWeekNames.short,\n                weekdays: this.formatterConfig.dayOfWeekNames.long\n            });\n        }\n\n        this.localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n        };\n    }\n\n    getLocaleData() {\n        return this.localeData;\n    }\n\n    setLocaleData(localeData): void {\n        this.localeData = localeData;\n    }\n\n    updateLocaleData(localeData): void {\n        this.localeData = { ...this.localeData, ...localeData };\n    }\n\n    getYear(date: Moment): number {\n        return this.clone(date).year();\n    }\n\n    getMonth(date: Moment): number {\n        return this.clone(date).month();\n    }\n\n    getDate(date: Moment): number {\n        return this.clone(date).date();\n    }\n\n    getHours(date: Moment): number {\n        return this.clone(date).hours();\n    }\n\n    getMinutes(date: Moment): number {\n        return this.clone(date).minutes();\n    }\n\n    getSeconds(date: Moment): number {\n        return this.clone(date).seconds();\n    }\n\n    getMilliseconds(date: Moment): number {\n        return this.clone(date).milliseconds();\n    }\n\n    getTime(date: Moment): number {\n        return date.valueOf();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return this.clone(date).day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        // Moment.js doesn't support narrow month names\n        return style === 'long' ? this.localeData.longMonths : this.localeData.shortMonths;\n    }\n\n    getDateNames(): string[] {\n        return this.localeData.dates;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (style === 'long') { return this.localeData.longDaysOfWeek; }\n\n        if (style === 'short') { return this.localeData.shortDaysOfWeek; }\n\n        return this.localeData.narrowDaysOfWeek;\n    }\n\n    getYearName(date: Moment): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek;\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone().locale(this.locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this.createMoment({year, month, date}).locale(this.locale);\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    createDateTime(\n        year: number,\n        month: number,\n        date: number,\n        hours: number,\n        minutes: number,\n        seconds: number,\n        milliseconds: number\n    ): Moment {\n        const newDate = this.createDate(year, month, date);\n\n        newDate.hours(hours);\n        newDate.minutes(minutes);\n        newDate.seconds(seconds);\n        newDate.milliseconds(milliseconds);\n\n        return newDate;\n    }\n\n    today(): Moment {\n        return this.createMoment().locale(this.locale);\n    }\n\n    parse(value: any, parseFormat: string | string[]): Moment | null {\n        if (value) {\n            if (value && typeof value === 'string') {\n                if (this.options && this.options.findDateFormat) { return this.findFormat(value); }\n\n                return parseFormat\n                    ? this.createMoment(value, parseFormat, this.locale)\n                    : this.createMoment(value).locale(this.locale);\n            }\n\n            return this.createMoment(value).locale(this.locale);\n        }\n\n        return null;\n    }\n\n    format(date: Moment, displayFormat: string): string {\n        // tslint:disable:no-parameter-reassignment\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n\n        return date.format(displayFormat);\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return this.clone(date).add({ years });\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return this.clone(date).add({ months });\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return this.clone(date).add({ days });\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    /** https://www.ietf.org/rfc/rfc3339.txt */\n    deserialize(value: any): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value).locale(this.locale);\n        } else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n\n        if (date && this.isValid(date)) {\n            return this.createMoment(date).locale(this.locale);\n        }\n\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any): boolean {\n        return moment.isMoment(obj);\n    }\n\n    isValid(date: Moment): boolean {\n        return this.clone(date).isValid();\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n\n    relativeDate(date: Moment, template: IFormatterRelativeTemplate): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const now = this.momentWithLocale;\n\n        const totalSeconds = now.diff(date, 'seconds');\n        const totalMinutes = now.diff(date, 'minutes');\n\n        const isToday = now.isSame(date, 'day');\n        const isYesterday = now.add(-1, 'days').isSame(date, 'day');\n\n        const templateVariables = {...this.formatterConfig.variables, ...template.variables};\n        const variables = this.compileVariables(date, templateVariables);\n        let newTemplate;\n\n        if (totalSeconds <= 59) { // seconds ago\n            variables.SECONDS_PASSED = totalSeconds;\n            newTemplate = template.SECONDS_AGO;\n\n        } else if (totalMinutes <= 59) { // minutes ago\n            variables.MINUTES_PASSED = totalMinutes;\n            newTemplate = template.MINUTES_AGO;\n\n        } else if (isToday) { // today\n            newTemplate = template.TODAY;\n\n        } else if (isYesterday) { // yesterday\n            newTemplate = template.YESTERDAY;\n\n        } else { // before yesterday\n            newTemplate = template.BEFORE_YESTERDAY;\n        }\n\n        return this.messageformat.compile(newTemplate)(variables);\n    }\n\n    relativeShortDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.short);\n    }\n\n    relativeLongDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.long);\n    }\n\n    absoluteDate(\n        date: Moment,\n        params: IFormatterAbsoluteTemplate,\n        datetime = false,\n        milliseconds = false,\n        microseconds = false\n    ): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const variables = this.compileVariables(date, { ...this.formatterConfig.variables, ...params.variables });\n\n        variables.SHOW_MILLISECONDS = milliseconds ? 'yes' : 'no';\n        variables.SHOW_MICROSECONDS = microseconds ? 'yes' : 'no';\n\n        const template = datetime ? params.DATETIME : params.DATE;\n\n        return this.messageformat.compile(template)(variables);\n    }\n\n    absoluteShortDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short);\n    }\n\n    absoluteShortDateTime(date: Moment, options?: IAbsoluteDateTimeOptions): string {\n        return this.absoluteDate(\n            date,\n            this.formatterConfig.absoluteTemplates.short,\n            true,\n            options?.milliseconds,\n            options?.microseconds\n        );\n    }\n\n    absoluteLongDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long);\n    }\n\n    absoluteLongDateTime(date: Moment, options?: IAbsoluteDateTimeOptions): string {\n        return this.absoluteDate(\n            date,\n            this.formatterConfig.absoluteTemplates.long,\n            true,\n            options?.milliseconds,\n            options?.microseconds\n        );\n    }\n\n    openedRangeDate(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    openedRangeDateTime(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeDate(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        const sameMonth = this.isSame('month', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n\n        const bothCurrentYear = startDateVariables.CURRENT_YEAR === 'yes' && endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {\n            ...variables,\n            START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n            END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n            SAME_MONTH: sameMonth\n        };\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    rangeDateTime(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = {...this.formatterConfig.variables, ...template.variables};\n        const sameMonth = this.isSame('month', startDate, endDate);\n        const sameDay = this.isSame('day', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n        startDateVariables.SAME_DAY = sameDay;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n        endDateVariables.SAME_DAY = sameDay;\n\n        const bothCurrentYear = startDateVariables.CURRENT_YEAR === 'yes' && endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {...variables,\n            START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n            END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n            SAME_MONTH: sameMonth,\n            SAME_DAY: sameDay};\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeShortDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeShortDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeLongDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeLongDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeMiddleDateTime(startDate: Moment, endDate: Moment): string {\n        return this.rangeDateTime(startDate, endDate, this.formatterConfig.rangeTemplates.closedRange.middle);\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\n    }\n\n    private compileVariables(date: Moment, variables: any): any {\n        const compiledVariables: any = {};\n\n        // tslint:disable-next-line:no-for-in\n        for (const key in variables) {\n            if (!variables.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = variables[key];\n            compiledVariables[key] = date.format(value);\n        }\n\n        compiledVariables.CURRENT_YEAR = this.isCurrentYear(date);\n\n        return compiledVariables;\n    }\n\n    private isCurrentYear(value: Moment): 'yes' | 'no' {\n        return this.momentWithLocale.isSame(value, 'year') ? 'yes' : 'no';\n    }\n\n    private isSame(unit: unitOfTime.StartOf, startDate: Moment, endDate: Moment): string {\n        return startDate.isSame(endDate, unit) ? 'yes' : 'no';\n    }\n\n    private configureTranslator(locale: string): void {\n        this.messageformat = new MessageFormat(locale);\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n    private findFormat(value: string): Moment | null {\n        if (!value) { return null; }\n\n        // default test - iso\n        const isoDate =  this.createMoment(value, moment.ISO_8601, this.locale);\n\n        if (isoDate.isValid()) { return isoDate; }\n\n        if (this.isNumeric(value)) {\n            // unix time sec\n            return this.createMoment(value, 'X', this.locale);\n        }\n\n        // long months naming: D MMM YYYY, MMM Do YYYY with short case support\n        if (\n            /^\\d{1,2}\\s\\S+\\s(\\d{2}|\\d{4})$/.test(value.trim()) ||\n            /^\\S+\\s\\d{1,2}[a-z]{2}\\s(\\d{2}|\\d{4})$/.test(value.trim())\n        ) {\n            return this.parseWithSpace(value);\n        }\n\n        // slash notation: DD/MM/YYYY, MM/DD/YYYY with short case support\n        if (/^\\d{1,2}\\/\\d{1,2}\\/(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithSlash(value);\n        }\n\n        // dash notation: DD-MM-YYYY, YYYY-DD-MM with short case support\n        if (/(^(\\d{1,2}|\\d{4})-\\d{1,2}-\\d{1,2}$)|(^\\d{1,2}-\\d{1,2}-(\\d{2}|\\d{4})$)/.test(value)) {\n           return this.parseWithDash(value);\n        }\n\n        // dot notation: DD.MM.YYYY with short case support\n        if (/^\\d{1,2}\\.\\d{1,2}\\.(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithDot(value);\n        }\n\n        return null;\n    }\n\n    private parseWithSpace(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD MMMM YYYY', this.locale);\n            case 'en':\n                // 16 Feb 2019 vs Feb 16th 2019, covers Feb and February cases\n                if (this.isNumeric(value[0])) {\n                    return this.createMoment(value, 'D MMMM YYYY', this.locale);\n                }\n\n                return this.createMoment(value, 'MMMM Do YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithSlash(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            // todo do we use generalized locales? en vs en-US; until not we try to guess\n            case 'en':\n                // US vs UK\n                const parts = value.split('/');\n                const datePartsCount = 3;\n                if (parts.length !== datePartsCount) { return null; }\n\n                const firstPart = parts[0].trim();\n                const secondPart = parts[1].trim();\n\n                if (!this.isNumeric(firstPart) || !this.isNumeric(secondPart)) { return null; }\n\n                const monthsInYears = 12;\n\n                const canFirstBeMonth = +firstPart <= monthsInYears;\n                const canSecondByMonth = +secondPart <= monthsInYears;\n\n                // first two parts cannot be month\n                if (!canFirstBeMonth && !canSecondByMonth) { return null; }\n\n                const canDetermineWhereMonth = canFirstBeMonth && canSecondByMonth;\n\n                // use US format by default\n                if (canDetermineWhereMonth) { return this.createMoment(value, 'MM/DD/YYYY', this.locale); }\n\n                return canFirstBeMonth && !canSecondByMonth\n                    ? this.createMoment(value, 'MM/DD/YYYY', this.locale)\n                    : this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithDash(value: string): Moment | null {\n        // leading year vs finishing year\n        const parts = value.split('-');\n        if (parts[0].length === 0) { return null; }\n\n        const maxDayOrMonthCharsCount = 2;\n\n        return parts[0].length <= maxDayOrMonthCharsCount\n            ? this.createMoment(value, 'DD-MM-YYYY', this.locale)\n            : this.createMoment(value, 'YYYY-MM-DD', this.locale);\n    }\n\n    private parseWithDot(value: string): Moment | null {\n        // covers two cases YYYY and YY (for current year)\n        return this.createMoment(value, 'DD.MM.YYYY', this.locale);\n    }\n}\n","import { McDateFormats } from '@ptsecurity/cdk/datetime';\n\n\nexport const MC_MOMENT_DATE_FORMATS: McDateFormats = {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n};\n","import { NgModule } from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, MC_DATE_LOCALE } from '@ptsecurity/cdk/datetime';\n\nimport { MC_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from './moment-date-adapter';\nimport { MC_MOMENT_DATE_FORMATS } from './moment-date-formats';\n\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [ MC_DATE_LOCALE, MC_MOMENT_DATE_ADAPTER_OPTIONS ]\n        }\n    ]\n})\nexport class MomentDateModule {}\n\n@NgModule({\n    imports: [MomentDateModule],\n    providers: [{\n        provide: MC_DATE_FORMATS, useValue: MC_MOMENT_DATE_FORMATS\n    }]\n})\nexport class McMomentDateModule {}\n"]}