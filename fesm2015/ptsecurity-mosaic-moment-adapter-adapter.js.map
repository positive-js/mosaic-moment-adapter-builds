{"version":3,"file":"ptsecurity-mosaic-moment-adapter-adapter.js","sources":["../../../packages/mosaic-moment-adapter/adapter/locales/en-US.ts","../../../packages/mosaic-moment-adapter/adapter/locales/ru-RU.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-adapter.ts","../../../packages/mosaic-moment-adapter/adapter/moment-date-formats.ts","../../../packages/mosaic-moment-adapter/adapter/index.ts"],"sourcesContent":["import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const enUS: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MILLISECONDS: '.SSS',\n        MICROSECONDS: '.SSSSSS',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'MMMM\\u00A0D',\n        SHORT_DATE: 'MMM\\u00A0D',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2013\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        short: {\n            standalone: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            formatted: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    },\n\n    dayOfWeekNames: {\n        long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}min ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}minute} other{#{NBSP}minutes}} ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{SHORT_DATE}, {TIME}}\n                    other{{SHORT_DATE}, {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                    select,\n                        yes{{MICROSECONDS}}\n                        other{}\n            }`\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{DATE}, {TIME}}\n                    other{{DATE}, {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, from{NBSP}{TIME}}\n                                other{{DATE}, {YEAR}, from{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{to{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{From {START_DATETIME} to{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const ruRU: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MILLISECONDS: ',SSS',\n        MICROSECONDS: ',SSSSSS',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'D\\u00A0MMMM',\n        SHORT_DATE: 'D\\u00A0MMM',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2014\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',\n            'Октябрь', 'Ноябрь', 'Декабрь'\n        ],\n        short: {\n            standalone: ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n            formatted: ['янв', 'фев', 'мар', 'апр', 'мая', 'июня', 'июля', 'авг', 'сен', 'окт', 'ноя', 'дек']\n        },\n        narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д']\n    },\n\n    dayOfWeekNames: {\n        long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        short: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n        narrow: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}мин назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}минуту} =2{#{NBSP}минуты} other{#{NBSP}минут}} назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{SHORT_DATE}, {TIME}}\n                    other{{SHORT_DATE} {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n            DATETIME: `{\n                CURRENT_YEAR,\n                select,\n                    yes{{DATE}, {TIME}}\n                    other{{DATE} {YEAR}, {TIME}}\n            }{\n                SHOW_MILLISECONDS,\n                select,\n                    yes{{MILLISECONDS}}\n                    other{}\n            }{\n                SHOW_MICROSECONDS,\n                select,\n                    yes{{MICROSECONDS}}\n                    other{}\n            }`\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, с{NBSP}{TIME}}\n                                other{{DATE} {YEAR}, с{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{по{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{С{NBSP}{START_DATETIME} по{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","// tslint:disable:no-magic-numbers\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n    DateAdapter,\n    MC_DATE_LOCALE,\n    IFormatterRangeTemplate,\n    IFormatterRelativeTemplate,\n    IFormatterAbsoluteTemplate,\n    IAbsoluteDateTimeOptions\n} from '@ptsecurity/cdk/datetime';\nimport * as MessageFormat from 'messageformat';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable:no-duplicate-imports\n// @ts-ignore (look at tsconfig)\nimport { default as _rollupMoment, Moment } from 'moment';\nimport { unitOfTime } from 'moment';\n\nimport { enUS } from './locales/en-US';\nimport { ruRU } from './locales/ru-RU';\nimport { IFormatterConfig } from './locales/IFormatterConfig';\n\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface IMcMomentDateAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * {@default false}\n     */\n    useUtc: boolean;\n    /**\n     * whether should parse method try guess date format\n     * {@default false}\n     */\n    findDateFormat: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MC_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<IMcMomentDateAdapterOptions>(\n    'MC_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable:naming-convention\nexport function MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): IMcMomentDateAdapterOptions {\n    return {\n        useUtc: false,\n        findDateFormat: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n\n    return valuesArray;\n}\n\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n    private messageformat: MessageFormat;\n\n    private readonly invalidDateErrorText: string = 'Invalid date';\n\n    private formatterConfig: IFormatterConfig;\n\n    private get momentWithLocale(): Moment {\n        return moment().locale(this.locale);\n    }\n\n    private localeData: {\n        firstDayOfWeek: number;\n        longMonths: string[];\n        shortMonths: string[];\n        dates: string[];\n        longDaysOfWeek: string[];\n        shortDaysOfWeek: string[];\n        narrowDaysOfWeek: string[];\n    };\n\n    constructor(\n        @Optional() @Inject(MC_DATE_LOCALE) dateLocale: string,\n        @Optional() @Inject(MC_MOMENT_DATE_ADAPTER_OPTIONS) private readonly options?: IMcMomentDateAdapterOptions\n    ) {\n        super();\n\n        this.setLocale(dateLocale || moment.locale());\n\n        this.configureTranslator(this.locale);\n    }\n\n    setLocale(locale: string): void {\n        super.setLocale(locale);\n\n        let momentLocaleData = moment.localeData(locale);\n\n        // This is our customs translations\n        const i18nLocals = ['en', 'ru'];\n\n        if (i18nLocals.indexOf(locale) !== -1) {\n            this.formatterConfig = locale === 'en' ? enUS : ruRU;\n\n            momentLocaleData = moment.updateLocale(locale, {\n                monthsShort: {\n                    format: this.formatterConfig.monthNames.short.formatted,\n                    standalone: this.formatterConfig.monthNames.short.standalone\n                },\n                weekdaysShort: this.formatterConfig.dayOfWeekNames.short,\n                weekdays: this.formatterConfig.dayOfWeekNames.long\n            });\n        }\n\n        this.localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n        };\n    }\n\n    getLocaleData() {\n        return this.localeData;\n    }\n\n    setLocaleData(localeData): void {\n        this.localeData = localeData;\n    }\n\n    updateLocaleData(localeData): void {\n        this.localeData = { ...this.localeData, ...localeData };\n    }\n\n    getYear(date: Moment): number {\n        return this.clone(date).year();\n    }\n\n    getMonth(date: Moment): number {\n        return this.clone(date).month();\n    }\n\n    getDate(date: Moment): number {\n        return this.clone(date).date();\n    }\n\n    getHours(date: Moment): number {\n        return this.clone(date).hours();\n    }\n\n    getMinutes(date: Moment): number {\n        return this.clone(date).minutes();\n    }\n\n    getSeconds(date: Moment): number {\n        return this.clone(date).seconds();\n    }\n\n    getMilliseconds(date: Moment): number {\n        return this.clone(date).milliseconds();\n    }\n\n    getTime(date: Moment): number {\n        return date.valueOf();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return this.clone(date).day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        // Moment.js doesn't support narrow month names\n        return style === 'long' ? this.localeData.longMonths : this.localeData.shortMonths;\n    }\n\n    getDateNames(): string[] {\n        return this.localeData.dates;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (style === 'long') { return this.localeData.longDaysOfWeek; }\n\n        if (style === 'short') { return this.localeData.shortDaysOfWeek; }\n\n        return this.localeData.narrowDaysOfWeek;\n    }\n\n    getYearName(date: Moment): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek;\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone().locale(this.locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this.createMoment({year, month, date}).locale(this.locale);\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    createDateTime(\n        year: number,\n        month: number,\n        date: number,\n        hours: number,\n        minutes: number,\n        seconds: number,\n        milliseconds: number\n    ): Moment {\n        const newDate = this.createDate(year, month, date);\n\n        newDate.hours(hours);\n        newDate.minutes(minutes);\n        newDate.seconds(seconds);\n        newDate.milliseconds(milliseconds);\n\n        return newDate;\n    }\n\n    today(): Moment {\n        return this.createMoment().locale(this.locale);\n    }\n\n    parse(value: any, parseFormat: string | string[]): Moment | null {\n        if (value) {\n            if (value && typeof value === 'string') {\n                if (this.options && this.options.findDateFormat) { return this.findFormat(value); }\n\n                return parseFormat\n                    ? this.createMoment(value, parseFormat, this.locale)\n                    : this.createMoment(value).locale(this.locale);\n            }\n\n            return this.createMoment(value).locale(this.locale);\n        }\n\n        return null;\n    }\n\n    format(date: Moment, displayFormat: string): string {\n        // tslint:disable:no-parameter-reassignment\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n\n        return date.format(displayFormat);\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return this.clone(date).add({ years });\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return this.clone(date).add({ months });\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return this.clone(date).add({ days });\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    /** https://www.ietf.org/rfc/rfc3339.txt */\n    deserialize(value: any): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value).locale(this.locale);\n        } else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n\n        if (date && this.isValid(date)) {\n            return this.createMoment(date).locale(this.locale);\n        }\n\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any): boolean {\n        return moment.isMoment(obj);\n    }\n\n    isValid(date: Moment): boolean {\n        return this.clone(date).isValid();\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n\n    relativeDate(date: Moment, template: IFormatterRelativeTemplate): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const now = this.momentWithLocale;\n\n        const totalSeconds = now.diff(date, 'seconds');\n        const totalMinutes = now.diff(date, 'minutes');\n\n        const isToday = now.isSame(date, 'day');\n        const isYesterday = now.add(-1, 'days').isSame(date, 'day');\n\n        const templateVariables = {...this.formatterConfig.variables, ...template.variables};\n        const variables = this.compileVariables(date, templateVariables);\n        let newTemplate;\n\n        if (totalSeconds <= 59) { // seconds ago\n            variables.SECONDS_PASSED = totalSeconds;\n            newTemplate = template.SECONDS_AGO;\n\n        } else if (totalMinutes <= 59) { // minutes ago\n            variables.MINUTES_PASSED = totalMinutes;\n            newTemplate = template.MINUTES_AGO;\n\n        } else if (isToday) { // today\n            newTemplate = template.TODAY;\n\n        } else if (isYesterday) { // yesterday\n            newTemplate = template.YESTERDAY;\n\n        } else { // before yesterday\n            newTemplate = template.BEFORE_YESTERDAY;\n        }\n\n        return this.messageformat.compile(newTemplate)(variables);\n    }\n\n    relativeShortDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.short);\n    }\n\n    relativeLongDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.long);\n    }\n\n    absoluteDate(\n        date: Moment,\n        params: IFormatterAbsoluteTemplate,\n        datetime = false,\n        milliseconds = false,\n        microseconds = false\n    ): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const variables = this.compileVariables(date, { ...this.formatterConfig.variables, ...params.variables });\n\n        variables.SHOW_MILLISECONDS = milliseconds ? 'yes' : 'no';\n        variables.SHOW_MICROSECONDS = microseconds ? 'yes' : 'no';\n\n        const template = datetime ? params.DATETIME : params.DATE;\n\n        return this.messageformat.compile(template)(variables);\n    }\n\n    absoluteShortDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short);\n    }\n\n    absoluteShortDateTime(date: Moment, options?: IAbsoluteDateTimeOptions): string {\n        return this.absoluteDate(\n            date,\n            this.formatterConfig.absoluteTemplates.short,\n            true,\n            options?.milliseconds,\n            options?.microseconds\n        );\n    }\n\n    absoluteLongDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long);\n    }\n\n    absoluteLongDateTime(date: Moment, options?: IAbsoluteDateTimeOptions): string {\n        return this.absoluteDate(\n            date,\n            this.formatterConfig.absoluteTemplates.long,\n            true,\n            options?.milliseconds,\n            options?.microseconds\n        );\n    }\n\n    openedRangeDate(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    openedRangeDateTime(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeDate(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        const sameMonth = this.isSame('month', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n\n        const bothCurrentYear = startDateVariables.CURRENT_YEAR === 'yes' && endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {\n            ...variables,\n            START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n            END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n            SAME_MONTH: sameMonth\n        };\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    rangeDateTime(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = {...this.formatterConfig.variables, ...template.variables};\n        const sameMonth = this.isSame('month', startDate, endDate);\n        const sameDay = this.isSame('day', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n        startDateVariables.SAME_DAY = sameDay;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n        endDateVariables.SAME_DAY = sameDay;\n\n        const bothCurrentYear = startDateVariables.CURRENT_YEAR === 'yes' && endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {...variables,\n            START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n            END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n            SAME_MONTH: sameMonth,\n            SAME_DAY: sameDay};\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeShortDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeShortDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeLongDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeLongDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeMiddleDateTime(startDate: Moment, endDate: Moment): string {\n        return this.rangeDateTime(startDate, endDate, this.formatterConfig.rangeTemplates.closedRange.middle);\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\n    }\n\n    private compileVariables(date: Moment, variables: any): any {\n        const compiledVariables: any = {};\n\n        // tslint:disable-next-line:no-for-in\n        for (const key in variables) {\n            if (!variables.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = variables[key];\n            compiledVariables[key] = date.format(value);\n        }\n\n        compiledVariables.CURRENT_YEAR = this.isCurrentYear(date);\n\n        return compiledVariables;\n    }\n\n    private isCurrentYear(value: Moment): 'yes' | 'no' {\n        return this.momentWithLocale.isSame(value, 'year') ? 'yes' : 'no';\n    }\n\n    private isSame(unit: unitOfTime.StartOf, startDate: Moment, endDate: Moment): string {\n        return startDate.isSame(endDate, unit) ? 'yes' : 'no';\n    }\n\n    private configureTranslator(locale: string): void {\n        this.messageformat = new MessageFormat(locale);\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n    private findFormat(value: string): Moment | null {\n        if (!value) { return null; }\n\n        // default test - iso\n        const isoDate =  this.createMoment(value, moment.ISO_8601, this.locale);\n\n        if (isoDate.isValid()) { return isoDate; }\n\n        if (this.isNumeric(value)) {\n            // unix time sec\n            return this.createMoment(value, 'X', this.locale);\n        }\n\n        // long months naming: D MMM YYYY, MMM Do YYYY with short case support\n        if (\n            /^\\d{1,2}\\s\\S+\\s(\\d{2}|\\d{4})$/.test(value.trim()) ||\n            /^\\S+\\s\\d{1,2}[a-z]{2}\\s(\\d{2}|\\d{4})$/.test(value.trim())\n        ) {\n            return this.parseWithSpace(value);\n        }\n\n        // slash notation: DD/MM/YYYY, MM/DD/YYYY with short case support\n        if (/^\\d{1,2}\\/\\d{1,2}\\/(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithSlash(value);\n        }\n\n        // dash notation: DD-MM-YYYY, YYYY-DD-MM with short case support\n        if (/(^(\\d{1,2}|\\d{4})-\\d{1,2}-\\d{1,2}$)|(^\\d{1,2}-\\d{1,2}-(\\d{2}|\\d{4})$)/.test(value)) {\n           return this.parseWithDash(value);\n        }\n\n        // dot notation: DD.MM.YYYY with short case support\n        if (/^\\d{1,2}\\.\\d{1,2}\\.(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithDot(value);\n        }\n\n        return null;\n    }\n\n    private parseWithSpace(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD MMMM YYYY', this.locale);\n            case 'en':\n                // 16 Feb 2019 vs Feb 16th 2019, covers Feb and February cases\n                if (this.isNumeric(value[0])) {\n                    return this.createMoment(value, 'D MMMM YYYY', this.locale);\n                }\n\n                return this.createMoment(value, 'MMMM Do YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithSlash(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            // todo do we use generalized locales? en vs en-US; until not we try to guess\n            case 'en':\n                // US vs UK\n                const parts = value.split('/');\n                const datePartsCount = 3;\n                if (parts.length !== datePartsCount) { return null; }\n\n                const firstPart = parts[0].trim();\n                const secondPart = parts[1].trim();\n\n                if (!this.isNumeric(firstPart) || !this.isNumeric(secondPart)) { return null; }\n\n                const monthsInYears = 12;\n\n                const canFirstBeMonth = +firstPart <= monthsInYears;\n                const canSecondByMonth = +secondPart <= monthsInYears;\n\n                // first two parts cannot be month\n                if (!canFirstBeMonth && !canSecondByMonth) { return null; }\n\n                const canDetermineWhereMonth = canFirstBeMonth && canSecondByMonth;\n\n                // use US format by default\n                if (canDetermineWhereMonth) { return this.createMoment(value, 'MM/DD/YYYY', this.locale); }\n\n                return canFirstBeMonth && !canSecondByMonth\n                    ? this.createMoment(value, 'MM/DD/YYYY', this.locale)\n                    : this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithDash(value: string): Moment | null {\n        // leading year vs finishing year\n        const parts = value.split('-');\n        if (parts[0].length === 0) { return null; }\n\n        const maxDayOrMonthCharsCount = 2;\n\n        return parts[0].length <= maxDayOrMonthCharsCount\n            ? this.createMoment(value, 'DD-MM-YYYY', this.locale)\n            : this.createMoment(value, 'YYYY-MM-DD', this.locale);\n    }\n\n    private parseWithDot(value: string): Moment | null {\n        // covers two cases YYYY and YY (for current year)\n        return this.createMoment(value, 'DD.MM.YYYY', this.locale);\n    }\n}\n","import { McDateFormats } from '@ptsecurity/cdk/datetime';\n\n\nexport const MC_MOMENT_DATE_FORMATS: McDateFormats = {\n    parse: {\n        dateInput: 'L'\n    },\n    display: {\n        dateInput: 'L',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY'\n    }\n};\n","import { NgModule } from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, MC_DATE_LOCALE } from '@ptsecurity/cdk/datetime';\n\nimport { MC_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from './moment-date-adapter';\nimport { MC_MOMENT_DATE_FORMATS } from './moment-date-formats';\n\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [ MC_DATE_LOCALE, MC_MOMENT_DATE_ADAPTER_OPTIONS ]\n        }\n    ]\n})\nexport class MomentDateModule {}\n\n@NgModule({\n    imports: [MomentDateModule],\n    providers: [{\n        provide: MC_DATE_FORMATS, useValue: MC_MOMENT_DATE_FORMATS\n    }]\n})\nexport class McMomentDateModule {}\n"],"names":["_rollupMoment","_moment"],"mappings":"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"}